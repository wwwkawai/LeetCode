Given a binary tree, you need to compute the length of the diameter of the tree. The diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.

Example:
Given a binary tree
          1
         / \
        2   3
       / \     
      4   5    
Return 3, which is the length of the path [4,2,1,3] or [5,2,1,3].
class Solution {
public:
    int m;
    int diameterOfBinaryTree(TreeNode* root) {
        m=0;
        height(root);
        return m;
    }
    int height(TreeNode* root)
    {
        if(!root)
            return 0;
        int left=height(root->left);
        int right=height(root->right);
        m=max(m,left+right);
        return 1+max(left,right);
    }
};
/*for every node in the tree, we sum the max height of its left child and its right child, and renew the answer*/ 
